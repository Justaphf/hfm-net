# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- feature/*

stages:
- stage: Build
  jobs:
  - job: Build

    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/HFM.All.sln'
      setupSolution: '**/HFM.Setup.sln'
      entryProject: '**/HFM.csproj'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: '>= 5.5.1'

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: PowerShell@2
      displayName: 'HFM.Build - Update-AssemblyVersion'
      inputs:
        targetType: 'inline'
        script: |
          . .\HFM.Build.ps1
          Configure-Version -CommitCount
          Update-AssemblyVersion -AssemblyVersion $Global:Version -AssemblyFileVersion $Global:Version
          $buildNumber = "$env:BUILD_DEFINITIONNAME`_$Global:Version"
          Write-Host "##vso[build.updatebuildnumber]$buildNumber"
        workingDirectory: '.\src'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:TargetFramework=net47 /p:NoWarn=1591'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*Tests.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        codeCoverageEnabled: true
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        diagnosticsEnabled: true

    - task: PowerShell@2
      displayName: 'HFM.Build - Deploy-Build'
      inputs:
        targetType: 'inline'
        script: |
          . .\HFM.Build.ps1
          Clean-Artifacts
          Deploy-Build -Verbose
        workingDirectory: '.\src'
        
    - task: PowerShell@2
      displayName: 'HFM.Build - Build-Zip'
      inputs:
        targetType: 'inline'
        script: |
          . .\HFM.Build.ps1
          Configure-Version -CommitCount
          Build-Zip -Verbose
        workingDirectory: '.\src'

    - task: VSBuild@1
      inputs:
        solution: $(setupSolution)
        platform: x86
        configuration: '$(buildConfiguration)'

    - task: PowerShell@2
      displayName: 'HFM.Build - Deploy-Msi'
      inputs:
        targetType: 'inline'
        script: |
          . .\HFM.Build.ps1
          Configure-Version -CommitCount
          Deploy-Msi -Verbose
        workingDirectory: '.\src'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '$(solution)'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(entryProject)'
        arguments: '-f net5.0-windows -c $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(entryProject)'
        arguments: '-f net5.0-windows -c $(buildConfiguration) --no-restore'
        zipAfterPublish: false
        modifyOutputPath: false

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          src\GoogleDriveFunctions.ps1
          src\Artifacts\**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
